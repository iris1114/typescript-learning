// {
//   "compilerOptions": {
//     /* Visit https://aka.ms/tsconfig.json to read more about this file */

//     /* Basic Options */
//     // "incremental": true,                         /* Enable incremental compilation */
//     "target": "es5",                                /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', 'ES2021', or 'ESNEXT'. */
//     "module": "commonjs",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
//     // "lib": [],                                   /* Specify library files to be included in the compilation. */
//     // "allowJs": true,                             /* Allow javascript files to be compiled. */
//     // "checkJs": true,                             /* Report errors in .js files. */
//     // "jsx": "preserve",                           /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */
//     // "declaration": true,                         /* Generates corresponding '.d.ts' file. */
//     // "declarationMap": true,                      /* Generates a sourcemap for each corresponding '.d.ts' file. */
//     // "sourceMap": true,                           /* Generates corresponding '.map' file. */
//     // "outFile": "./",                             /* Concatenate and emit output to single file. */
//     // "outDir": "./",                              /* Redirect output structure to the directory. */
//     // "rootDir": "./",                             /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
//     // "composite": true,                           /* Enable project compilation */
//     // "tsBuildInfoFile": "./",                     /* Specify file to store incremental compilation information */
//     // "removeComments": true,                      /* Do not emit comments to output. */
//     // "noEmit": true,                              /* Do not emit outputs. */
//     // "importHelpers": true,                       /* Import emit helpers from 'tslib'. */
//     // "downlevelIteration": true,                  /* Provide full support for iterables in 'for-of', spread, and destructuring when targeting 'ES5' or 'ES3'. */
//     // "isolatedModules": true,                     /* Transpile each file as a separate module (similar to 'ts.transpileModule'). */

//     /* Strict Type-Checking Options */
//     "strict": true,                                 /* Enable all strict type-checking options. */
//     // "noImplicitAny": true,                       /* Raise error on expressions and declarations with an implied 'any' type. */
//     // "strictNullChecks": true,                    /* Enable strict null checks. */
//     // "strictFunctionTypes": true,                 /* Enable strict checking of function types. */
//     // "strictBindCallApply": true,                 /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
//     // "strictPropertyInitialization": true,        /* Enable strict checking of property initialization in classes. */
//     // "noImplicitThis": true,                      /* Raise error on 'this' expressions with an implied 'any' type. */
//     // "alwaysStrict": true,                        /* Parse in strict mode and emit "use strict" for each source file. */

//     /* Additional Checks */
//     // "noUnusedLocals": true,                      /* Report errors on unused locals. */
//     // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
//     // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */
//     // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */
//     // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
//     // "noImplicitOverride": true,                  /* Ensure overriding members in derived classes are marked with an 'override' modifier. */
//     // "noPropertyAccessFromIndexSignature": true,  /* Require undeclared properties from index signatures to use element accesses. */

//     /* Module Resolution Options */
//     // "moduleResolution": "node",                  /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
//     // "baseUrl": "./",                             /* Base directory to resolve non-absolute module names. */
//     // "paths": {},                                 /* A series of entries which re-map imports to lookup locations relative to the 'baseUrl'. */
//     // "rootDirs": [],                              /* List of root folders whose combined content represents the structure of the project at runtime. */
//     // "typeRoots": [],                             /* List of folders to include type definitions from. */
//     // "types": [],                                 /* Type declaration files to be included in compilation. */
//     // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
//     "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
//     // "preserveSymlinks": true,                    /* Do not resolve the real path of symlinks. */
//     // "allowUmdGlobalAccess": true,                /* Allow accessing UMD globals from modules. */

//     /* Source Map Options */
//     // "sourceRoot": "",                            /* Specify the location where debugger should locate TypeScript files instead of source locations. */
//     // "mapRoot": "",                               /* Specify the location where debugger should locate map files instead of generated locations. */
//     // "inlineSourceMap": true,                     /* Emit a single file with source maps instead of having a separate file. */
//     // "inlineSources": true,                       /* Emit the source alongside the sourcemaps within a single file; requires '--inlineSourceMap' or '--sourceMap' to be set. */

//     /* Experimental Options */
//     // "experimentalDecorators": true,              /* Enables experimental support for ES7 decorators. */
//     // "emitDecoratorMetadata": true,               /* Enables experimental support for emitting type metadata for decorators. */

//     /* Advanced Options */
//     "skipLibCheck": true,                           /* Skip type checking of declaration files. */
//     "forceConsistentCasingInFileNames": true        /* Disallow inconsistently-cased references to the same file. */
//   }
// }


{
  "compileOnSave": false,    //編輯器在儲存檔案的時候根據tsconfig.json重新產生編譯檔案
  "compilerOptions": {

    /* 基本選項 */
    "target": "es5",    // 指定編譯生成的JS版本: 'ES3' (default), 'ES5', 'ES6'/'ES2015', 'ES2016', 'ES2017', or 'ESNEXT'
    "module": "commonjs", // 指定生成哪種模組: 'commonjs', 'amd', 'system', 'umd' or 'es2015'
    "lib": [],          // 編譯需要引入的特定函式庫檔案
    "allowJs": true,    // 允許編譯 javascript 文件
    "checkJs": true,    // 報告 javascript 文件中的錯誤
    "jsx": "preserve",  // 指定 jsx 代碼的生成: 'preserve', 'react-native', or 'react'
    "declaration": true,  // 生成相應的 '.d.ts' 文件
    "sourceMap": true,   // 生成相應的 '.map' 文件
    "outFile": "./",     // 將輸出文件合併為一個文件
    "outDir": "./",      // 指定輸出目錄
    "rootDir": "./",     // 檔案應該要被放置的位置
    "removeComments": true,  // 刪除編譯後的所有的註釋
    "noEmit": true,          // 不產生輸出檔案
    "importHelpers": true,   // 從 tslib 導入輔助工具函數
    "isolatedModules": true,  // 將每個文件做為單獨的module（與 'ts.transpileModule' 類似）.

    /* 嚴格的類型檢查選項 */
    "strict": true,           // 啟用所有嚴格類型檢查選項
    "noImplicitAny": true,    // 在表達式和聲明上有隱含的 any類型時報錯
    "strictNullChecks": true, // 啟用嚴格的 null 檢查
    "noImplicitThis": true,   // 當 this 表達式值為 any 類型的時候，生成一個錯誤
    "alwaysStrict": true,     // 以嚴格模式檢查每個module，並在每個文件裡加入 'use strict'

    /* 額外的檢查 */
    "noUnusedLocals": true,   // 有未使用的變數時，拋出錯誤
    "noUnusedParameters": true,  // 有未使用的參數時，拋出錯誤
    "noImplicitReturns": true, // 並不是所有function里的代碼都有返回值時，拋出錯誤
    "noFallthroughCasesInSwitch": true, // 報告 switch 語句的 fallthrough 錯誤。 （即，不允許 switch 的 case 語句貫穿）

    /* 模塊解析選項 */
    "moduleResolution": "node",  // 選擇模組解析策略： 'node' (Node.js) or 'classic' (TypeScript pre-1.6)
    "baseUrl": "./",         // 用於解析非相對模組名稱的基目錄
    "paths": {},            // 模組名到基於 baseUrl 的路徑映射的列表
    "rootDirs": [],        // 根文件夾列表，其組合內容表示項目運行時的結構內容
    "typeRoots": [],       // 包含類型聲明的文件列表
    "types": [],          // 需要包含的類型聲明文件名列表
    "allowSyntheticDefaultImports": true,  // 允許從沒有設置默認導出的模組中默認導入。

    /* Source Map Options */
    "sourceRoot": "./",                    // 指定調試器應該找到 TypeScript 文件而不是源文件的位置
    "mapRoot": "./",                       // 指定調試器應該找到映射文件而不是生成文件的位置
    "inlineSourceMap": true,               // 生成單個 soucemaps 文件，而不是將 sourcemaps 生成不同的文件
    "inlineSources": true,                 // 將代碼與 sourcemaps 生成到一個文件中，要求同時設置了 --inlineSourceMap 或 --sourceMap 屬性

    /* 其他選項 */
    "experimentalDecorators": true,        // 啟用裝飾器
    "emitDecoratorMetadata": true,          // 為裝飾器提供元數據的支持
        
    /* 進階選項 */
    "skipLibCheck": true,                     //不會檢查引入的函式庫檔案
    "forceConsistentCasingInFileNames": true // 確保檔案的大小寫一致
  },
  "files":[
        "hello.ts"                           //若指定 files，則只會編譯指定的 hello.ts 檔案。
  ],
  "exclude": [                               //指定編譯器需要排除的文件或文件夾
    "node_modules"
  ],
  "extends": "./tsconfig.base.json",         //把基礎配置抽離成tsconfig.base.json檔案，然後引入
  
  "references": [                             // 指定依赖的程式路徑
     {"path": "./common"}
  ],
  "typeAcquisition": {                       //自動引入函式庫相關定義文件(.d.ts)。
      "enable": false,
      "exclude": ["jquery"],
      "include": ["jest"]
  }
}